0101001000100010    //sub $t2, $t2, $t2         0101 0010 0010 0010     
1000001000100111    //addi $t2,$t2,7            1000 0010 0010 0111
1000001000100111    //addi $t2,$t2,7            1000 0010 0010 0111
1000001000100111    //addi $t2,$t2,7            1000 0010 0010 0111
1000001000100111    //addi $t2,$t2,7            1000 0010 0010 0111
1000001000100111    //addi $t2,$t2,7            1000 0010 0010 0111
1000001000100111    //addi $t2,$t2,7            1000 0010 0010 0111
1000001000100110    //addi $t2,$t2,6            1000 0010 0010 0010     48 in now in $t2
0000001000110000    //lw $t3, (0)$t2            0000 0010 0011 0000     $t3=Memory[$t2]  $t3=11
0100001100110010    //add $t3, $t3, $t2         0100 0011 0011 0010     $t3=11+48
1000001100110001    //addi $t3, $t3, 1          1000 0011 0011 0001     $t3=59+1, +1 needed as beq placed before summing
0101010001000100    //sub $t4, $t4, $t4         0101 0100 0100 0100     $t4 = sum, set to 0
1000001001010001    //addi $t5, $t2, 1          1000 0010 0101 0001     $t5=i, set to 49
0011001101010101    //beq $t3, $t5, 0101        0011 0011 0101 0101     pc=pc+5 (line 19)
0000010101100000    //lw $t6, 0($t5)            0000 0101 0110 0000     $t6 = Memory[$t5] 
0100011001000100    //add $t4, $t6, $4          01000 1100 100 0100     sum+=Memory[i]
1000010101010001    //addi $t5, $t5, 1          1000 0101 0101 0001     add 1 to "i"
0010000000001101    //j 13                      0010 0000 0000 1101     jump to line 14   
0001001101000000    //sw $t4, 0($t2)            0001 0011 0100 0000     Memory[48] = 66
0101011101110111    //sub $t7, $t7, $7          0101 0111 0111 0111     Verify store
0000010101110000    //lw $t7, 0($t2)            0000 0101 0111 0000     $t7 = Memory[48]
1000000000000000    //addi $t0, $t0, 0          1000 0000 0000 0000     $t0 = $t0 + 0 (vcs ends before final print, icarus is fine without this)                                
1111000000000000    //halt                      1111 0000 0000 0000
                    
                     //                          OP   RS   RD   IM            

//$t3 = NUM_TO_CNT = 11, will turn to 59 (48+11)
//$t4 = sum
//$t5 = i; starts at 48
//$t6 = Memory[i];
//$t7 = Memory[48];
