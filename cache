#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1110-g18392a46)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000001a8ea7cb530 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
enum000001a8ea7c81c0 .enum2/s (32)
   "READ" 0,
   "WRITE" 1
 ;
S_000001a8ea7c6ab0 .scope module, "tb" "tb" 3 3;
 .timescale 0 0;
v000001a8ea8844b0_0 .var "activate", 0 0;
v000001a8ea884550_0 .var "address", 15 0;
v000001a8ea8845f0_0 .var "clk", 0 0;
v000001a8ea884690_0 .var "data", 15 0;
v000001a8ea884730_0 .net "data_f_dut", 15 0, v000001a8ea884230_0;  1 drivers
v000001a8ea8847d0_0 .var/2s "instr_type", 31 0;
v000001a8ea885360 .array "instructions", 31 0, 15 0;
S_000001a8ea7c6c40 .scope module, "dut" "cache" 3 24, 3 42 0, S_000001a8ea7c6ab0;
 .timescale 0 0;
    .port_info 0 /INPUT 16 "address_in";
    .port_info 1 /INPUT 16 "data_in";
    .port_info 2 /OUTPUT 16 "data_out";
    .port_info 3 /INPUT 1 "activate";
    .port_info 4 /INPUT 32 "instr_type";
P_000001a8ea82ad00 .param/l "BL_NUM_BYTES" 0 3 55, +C4<00000000000000000000000000000100>;
P_000001a8ea82ad38 .param/l "CACHE_NUM_COL" 0 3 56, +C4<00000000000000000000000000001000>;
v000001a8ea8247e0_0 .net "activate", 0 0, v000001a8ea8844b0_0;  1 drivers
v000001a8ea7ceb40_0 .net "address_in", 15 0, v000001a8ea884550_0;  1 drivers
v000001a8ea7c6dd0_0 .var "block_address", 15 0;
v000001a8ea7c6e70_0 .var "block_number", 15 0;
v000001a8ea8840f0 .array "cache_data", 7 0, 31 0;
v000001a8ea884190_0 .net "data_in", 15 0, v000001a8ea884690_0;  1 drivers
v000001a8ea884230_0 .var "data_out", 15 0;
v000001a8ea8842d0_0 .net/2s "instr_type", 31 0, v000001a8ea8847d0_0;  1 drivers
v000001a8ea884370 .array "tag_number", 7 0, 10 0;
v000001a8ea884410_0 .var "vld", 7 0;
E_000001a8ea8294b0/0 .event anyedge, v000001a8ea8247e0_0, v000001a8ea7ceb40_0, v000001a8ea7c6dd0_0, v000001a8ea8842d0_0;
v000001a8ea884370_0 .array/port v000001a8ea884370, 0;
v000001a8ea884370_1 .array/port v000001a8ea884370, 1;
E_000001a8ea8294b0/1 .event anyedge, v000001a8ea7c6e70_0, v000001a8ea884410_0, v000001a8ea884370_0, v000001a8ea884370_1;
v000001a8ea884370_2 .array/port v000001a8ea884370, 2;
v000001a8ea884370_3 .array/port v000001a8ea884370, 3;
v000001a8ea884370_4 .array/port v000001a8ea884370, 4;
v000001a8ea884370_5 .array/port v000001a8ea884370, 5;
E_000001a8ea8294b0/2 .event anyedge, v000001a8ea884370_2, v000001a8ea884370_3, v000001a8ea884370_4, v000001a8ea884370_5;
v000001a8ea884370_6 .array/port v000001a8ea884370, 6;
v000001a8ea884370_7 .array/port v000001a8ea884370, 7;
v000001a8ea8840f0_0 .array/port v000001a8ea8840f0, 0;
v000001a8ea8840f0_1 .array/port v000001a8ea8840f0, 1;
E_000001a8ea8294b0/3 .event anyedge, v000001a8ea884370_6, v000001a8ea884370_7, v000001a8ea8840f0_0, v000001a8ea8840f0_1;
v000001a8ea8840f0_2 .array/port v000001a8ea8840f0, 2;
v000001a8ea8840f0_3 .array/port v000001a8ea8840f0, 3;
v000001a8ea8840f0_4 .array/port v000001a8ea8840f0, 4;
v000001a8ea8840f0_5 .array/port v000001a8ea8840f0, 5;
E_000001a8ea8294b0/4 .event anyedge, v000001a8ea8840f0_2, v000001a8ea8840f0_3, v000001a8ea8840f0_4, v000001a8ea8840f0_5;
v000001a8ea8840f0_6 .array/port v000001a8ea8840f0, 6;
v000001a8ea8840f0_7 .array/port v000001a8ea8840f0, 7;
E_000001a8ea8294b0/5 .event anyedge, v000001a8ea8840f0_6, v000001a8ea8840f0_7, v000001a8ea884190_0;
E_000001a8ea8294b0 .event/or E_000001a8ea8294b0/0, E_000001a8ea8294b0/1, E_000001a8ea8294b0/2, E_000001a8ea8294b0/3, E_000001a8ea8294b0/4, E_000001a8ea8294b0/5;
    .scope S_000001a8ea7c6c40;
T_0 ;
    %wait E_000001a8ea8294b0;
    %load/vec4 v000001a8ea8247e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %load/vec4 v000001a8ea7ceb40_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %mod;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_0.2, 4;
    %vpi_call/w 3 64 "$display", "Address needs to be word aligned (divisible by 2) for now" {0 0 0};
    %vpi_call/w 3 65 "$display", "This most likely means to load a byte. If address 0x03, we should actually load word at 0x02. Then only return the upper 8 bits" {0 0 0};
    %vpi_call/w 3 66 "$finish" {0 0 0};
T_0.2 ;
    %load/vec4 v000001a8ea7ceb40_0;
    %pad/u 32;
    %pushi/vec4 4, 0, 32;
    %div;
    %pad/u 16;
    %store/vec4 v000001a8ea7c6dd0_0, 0, 16;
    %load/vec4 v000001a8ea7c6dd0_0;
    %pad/u 32;
    %pushi/vec4 8, 0, 32;
    %mod;
    %pad/u 16;
    %store/vec4 v000001a8ea7c6e70_0, 0, 16;
    %load/vec4 v000001a8ea8842d0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.4, 4;
    %load/vec4 v000001a8ea884410_0;
    %load/vec4 v000001a8ea7c6e70_0;
    %part/u 1;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_0.6, 4;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %load/vec4a v000001a8ea884370, 4;
    %load/vec4 v000001a8ea7ceb40_0;
    %parti/s 11, 5, 4;
    %cmp/e;
    %jmp/0xz  T_0.8, 4;
    %load/vec4 v000001a8ea7ceb40_0;
    %pad/u 32;
    %pushi/vec4 4, 0, 32;
    %mod;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.10, 4;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %load/vec4a v000001a8ea8840f0, 4;
    %parti/s 16, 0, 2;
    %store/vec4 v000001a8ea884230_0, 0, 16;
    %jmp T_0.11;
T_0.10 ;
    %load/vec4 v000001a8ea7ceb40_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %mod;
    %cmpi/e 2, 0, 32;
    %jmp/0xz  T_0.12, 4;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %load/vec4a v000001a8ea8840f0, 4;
    %parti/s 16, 16, 6;
    %store/vec4 v000001a8ea884230_0, 0, 16;
T_0.12 ;
T_0.11 ;
T_0.8 ;
T_0.6 ;
    %jmp T_0.5;
T_0.4 ;
    %load/vec4 v000001a8ea8842d0_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_0.14, 4;
    %vpi_call/w 3 88 "$display", "Got a write instruction" {0 0 0};
    %load/vec4 v000001a8ea884410_0;
    %load/vec4 v000001a8ea7c6e70_0;
    %part/u 1;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.16, 4;
    %pushi/vec4 1, 0, 1;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %store/vec4 v000001a8ea884410_0, 4, 1;
    %pushi/vec4 0, 0, 32;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %store/vec4a v000001a8ea8840f0, 4, 0;
    %load/vec4 v000001a8ea7ceb40_0;
    %parti/s 10, 6, 4;
    %pad/u 11;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %store/vec4a v000001a8ea884370, 4, 0;
T_0.16 ;
    %load/vec4 v000001a8ea7ceb40_0;
    %pad/u 32;
    %pushi/vec4 4, 0, 32;
    %mod;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.18, 4;
    %load/vec4 v000001a8ea884190_0;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %flag_mov 8, 4;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a8ea8840f0, 4, 5;
    %jmp T_0.19;
T_0.18 ;
    %load/vec4 v000001a8ea7ceb40_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %mod;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.20, 4;
    %load/vec4 v000001a8ea884190_0;
    %ix/getv 4, v000001a8ea7c6e70_0;
    %flag_mov 8, 4;
    %ix/load 5, 16, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a8ea8840f0, 4, 5;
T_0.20 ;
T_0.19 ;
T_0.14 ;
T_0.5 ;
    %vpi_call/w 3 104 "$display", "Block number is %d", v000001a8ea7c6e70_0 {0 0 0};
    %vpi_call/w 3 105 "$display", "Data at cache_data[block_number] is %h", &A<v000001a8ea8840f0, v000001a8ea7c6e70_0 > {0 0 0};
    %vpi_call/w 3 107 "$finish" {0 0 0};
T_0.0 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_000001a8ea7c6ab0;
T_1 ;
    %pushi/vec4 4, 0, 16;
    %store/vec4 v000001a8ea884550_0, 0, 16;
    %pushi/vec4 256, 0, 16;
    %store/vec4 v000001a8ea884690_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a8ea8844b0_0, 0, 1;
    %end;
    .thread T_1, $init;
    .scope S_000001a8ea7c6ab0;
T_2 ;
    %vpi_call/w 3 6 "$readmemb", "instructions3.mem", v000001a8ea885360 {0 0 0};
    %end;
    .thread T_2;
    .scope S_000001a8ea7c6ab0;
T_3 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v000001a8ea8847d0_0, 0, 32;
    %end;
    .thread T_3;
    .scope S_000001a8ea7c6ab0;
T_4 ;
    %delay 5, 0;
    %load/vec4 v000001a8ea8845f0_0;
    %inv;
    %store/vec4 v000001a8ea8845f0_0, 0, 1;
    %jmp T_4;
    .thread T_4;
    .scope S_000001a8ea7c6ab0;
T_5 ;
    %delay 5, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001a8ea8844b0_0, 0, 1;
    %delay 5, 0;
    %end;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "-";
    "cache_test.sv";
