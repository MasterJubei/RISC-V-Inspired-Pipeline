#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1110-g18392a46)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000001bfbb00b0e0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
enum000001bfbafff0f0 .enum2/s (32)
   "READ" 0,
   "WRITE" 1
 ;
S_000001bfbaf86ab0 .scope module, "cache_controller" "cache_controller" 3 95;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
o000001bfbb018fa8 .functor BUFZ 1, C4<z>; HiZ drive
v000001bfbb006f10_0 .net "clk", 0 0, o000001bfbb018fa8;  0 drivers
S_000001bfbaf86c40 .scope module, "tb" "tb" 3 4;
 .timescale 0 0;
v000001bfbb073120_0 .var "activate", 0 0;
v000001bfbb073f30_0 .var "address", 15 0;
v000001bfbb075790_0 .net "address_f_cache", 15 0, v000001bfbaff7d20_0;  1 drivers
v000001bfbb0755b0_0 .net "block_f_cache", 31 0, v000001bfbb072720_0;  1 drivers
v000001bfbb074cf0_0 .var "clk", 0 0;
v000001bfbb073d50_0 .var "data", 15 0;
v000001bfbb0751f0_0 .net "data_f_dut", 15 0, v000001bfbb072450_0;  1 drivers
v000001bfbb073e90_0 .var/2s "instr_type", 31 0;
v000001bfbb075290 .array "instructions", 31 0, 15 0;
v000001bfbb074ed0_0 .net "mem_data", 31 0, v000001bfbb073300_0;  1 drivers
v000001bfbb0753d0_0 .net "mem_load_req_f_cache", 0 0, v000001bfbb072ae0_0;  1 drivers
v000001bfbb074570_0 .net "mem_load_req_rdy", 0 0, v000001bfbb0733a0_0;  1 drivers
v000001bfbb074930_0 .net "mem_load_toggle", 0 0, v000001bfbb0731c0_0;  1 drivers
v000001bfbb075150_0 .net "mem_store_ack", 0 0, v000001bfbb072e00_0;  1 drivers
v000001bfbb0749d0_0 .net "mem_store_completed", 0 0, v000001bfbb072900_0;  1 drivers
v000001bfbb074b10_0 .net "mem_store_req_f_cache", 0 0, v000001bfbb0727c0_0;  1 drivers
S_000001bfbaf86dd0 .scope module, "dut" "cache" 3 44, 3 101 0, S_000001bfbaf86c40;
 .timescale 0 0;
    .port_info 0 /INPUT 16 "address_in";
    .port_info 1 /INPUT 16 "data_in";
    .port_info 2 /OUTPUT 16 "data_out";
    .port_info 3 /INPUT 1 "activate";
    .port_info 4 /INPUT 32 "instr_type";
    .port_info 5 /OUTPUT 32 "data_to_mem";
    .port_info 6 /INPUT 32 "data_f_mem";
    .port_info 7 /OUTPUT 1 "mem_load_req";
    .port_info 8 /OUTPUT 1 "mem_store_req";
    .port_info 9 /OUTPUT 1 "mem_store_ack";
    .port_info 10 /INPUT 1 "mem_store_completed";
    .port_info 11 /INPUT 1 "mem_load_req_rdy";
    .port_info 12 /INPUT 1 "mem_load_toggle";
    .port_info 13 /OUTPUT 16 "address_to_mem";
P_000001bfbb00a680 .param/l "BL_NUM_BYTES" 0 3 130, +C4<00000000000000000000000000000100>;
P_000001bfbb00a6b8 .param/l "CACHE_NUM_ROW" 0 3 101, +C4<00000000000000000000000000001000>;
v000001bfbb00b310_0 .net "activate", 0 0, v000001bfbb073120_0;  1 drivers
v000001bfbaff7c80_0 .net "address_in", 15 0, v000001bfbb073f30_0;  1 drivers
v000001bfbaff7d20_0 .var "address_to_mem", 15 0;
v000001bfbaff7dc0_0 .var "block_address", 15 0;
v000001bfbaff7e60_0 .var "block_num", 15 0;
v000001bfbaff7f00 .array "cache_data", 7 0, 31 0;
v000001bfbaff7fa0_0 .net "data_f_mem", 31 0, v000001bfbb073300_0;  alias, 1 drivers
v000001bfbaff8040_0 .net "data_in", 15 0, v000001bfbb073d50_0;  1 drivers
v000001bfbb072450_0 .var "data_out", 15 0;
v000001bfbb072720_0 .var "data_to_mem", 31 0;
v000001bfbb072d60_0 .net/2s "instr_type", 31 0, v000001bfbb073e90_0;  1 drivers
v000001bfbb072ae0_0 .var "mem_load_req", 0 0;
v000001bfbb072b80_0 .net "mem_load_req_rdy", 0 0, v000001bfbb0733a0_0;  alias, 1 drivers
v000001bfbb072860_0 .net "mem_load_toggle", 0 0, v000001bfbb0731c0_0;  alias, 1 drivers
v000001bfbb072e00_0 .var "mem_store_ack", 0 0;
v000001bfbb072ea0_0 .net "mem_store_completed", 0 0, v000001bfbb072900_0;  alias, 1 drivers
v000001bfbb0727c0_0 .var "mem_store_req", 0 0;
v000001bfbb072c20_0 .var "read_success", 0 0;
v000001bfbb072cc0 .array "tag_number", 7 0, 10 0;
v000001bfbb0729a0_0 .var "to_evict", 7 0;
v000001bfbb072f40 .array "vld", 7 0, 0 0;
E_000001bfbb0072d0/0 .event anyedge, v000001bfbb00b310_0, v000001bfbb072d60_0, v000001bfbaff7c80_0, v000001bfbaff7dc0_0;
v000001bfbb072f40_0 .array/port v000001bfbb072f40, 0;
v000001bfbb072f40_1 .array/port v000001bfbb072f40, 1;
v000001bfbb072f40_2 .array/port v000001bfbb072f40, 2;
E_000001bfbb0072d0/1 .event anyedge, v000001bfbaff7e60_0, v000001bfbb072f40_0, v000001bfbb072f40_1, v000001bfbb072f40_2;
v000001bfbb072f40_3 .array/port v000001bfbb072f40, 3;
v000001bfbb072f40_4 .array/port v000001bfbb072f40, 4;
v000001bfbb072f40_5 .array/port v000001bfbb072f40, 5;
v000001bfbb072f40_6 .array/port v000001bfbb072f40, 6;
E_000001bfbb0072d0/2 .event anyedge, v000001bfbb072f40_3, v000001bfbb072f40_4, v000001bfbb072f40_5, v000001bfbb072f40_6;
v000001bfbb072f40_7 .array/port v000001bfbb072f40, 7;
v000001bfbb072cc0_0 .array/port v000001bfbb072cc0, 0;
v000001bfbb072cc0_1 .array/port v000001bfbb072cc0, 1;
v000001bfbb072cc0_2 .array/port v000001bfbb072cc0, 2;
E_000001bfbb0072d0/3 .event anyedge, v000001bfbb072f40_7, v000001bfbb072cc0_0, v000001bfbb072cc0_1, v000001bfbb072cc0_2;
v000001bfbb072cc0_3 .array/port v000001bfbb072cc0, 3;
v000001bfbb072cc0_4 .array/port v000001bfbb072cc0, 4;
v000001bfbb072cc0_5 .array/port v000001bfbb072cc0, 5;
v000001bfbb072cc0_6 .array/port v000001bfbb072cc0, 6;
E_000001bfbb0072d0/4 .event anyedge, v000001bfbb072cc0_3, v000001bfbb072cc0_4, v000001bfbb072cc0_5, v000001bfbb072cc0_6;
v000001bfbb072cc0_7 .array/port v000001bfbb072cc0, 7;
v000001bfbaff7f00_0 .array/port v000001bfbaff7f00, 0;
v000001bfbaff7f00_1 .array/port v000001bfbaff7f00, 1;
v000001bfbaff7f00_2 .array/port v000001bfbaff7f00, 2;
E_000001bfbb0072d0/5 .event anyedge, v000001bfbb072cc0_7, v000001bfbaff7f00_0, v000001bfbaff7f00_1, v000001bfbaff7f00_2;
v000001bfbaff7f00_3 .array/port v000001bfbaff7f00, 3;
v000001bfbaff7f00_4 .array/port v000001bfbaff7f00, 4;
v000001bfbaff7f00_5 .array/port v000001bfbaff7f00, 5;
v000001bfbaff7f00_6 .array/port v000001bfbaff7f00, 6;
E_000001bfbb0072d0/6 .event anyedge, v000001bfbaff7f00_3, v000001bfbaff7f00_4, v000001bfbaff7f00_5, v000001bfbaff7f00_6;
v000001bfbaff7f00_7 .array/port v000001bfbaff7f00, 7;
E_000001bfbb0072d0/7 .event anyedge, v000001bfbaff7f00_7, v000001bfbb072c20_0, v000001bfbb072b80_0, v000001bfbaff7fa0_0;
E_000001bfbb0072d0/8 .event anyedge, v000001bfbb072450_0, v000001bfbaff8040_0, v000001bfbb0729a0_0;
E_000001bfbb0072d0 .event/or E_000001bfbb0072d0/0, E_000001bfbb0072d0/1, E_000001bfbb0072d0/2, E_000001bfbb0072d0/3, E_000001bfbb0072d0/4, E_000001bfbb0072d0/5, E_000001bfbb0072d0/6, E_000001bfbb0072d0/7, E_000001bfbb0072d0/8;
E_000001bfbb007f10 .event anyedge, v000001bfbb072b80_0;
S_000001bfbafdd6f0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 158, 3 158 0, S_000001bfbaf86dd0;
 .timescale 0 0;
v000001bfbafdc610_0 .var/2s "i", 31 0;
S_000001bfbafdd880 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 243, 3 243 0, S_000001bfbaf86dd0;
 .timescale 0 0;
v000001bfbaf8bc20_0 .var/2s "i", 31 0;
S_000001bfbafdda10 .scope task, "send_to_mem" "send_to_mem" 3 133, 3 133 0, S_000001bfbaf86dd0;
 .timescale 0 0;
v000001bfbb00b270_0 .var/2s "i", 31 0;
E_000001bfbb007b50 .event anyedge, v000001bfbb072ea0_0;
TD_tb.dut.send_to_mem ;
    %ix/getv/s 4, v000001bfbb00b270_0;
    %load/vec4a v000001bfbaff7f00, 4;
    %store/vec4 v000001bfbb072720_0, 0, 32;
    %vpi_call/w 3 136 "$display", "Cache data[%d] is %h", v000001bfbb00b270_0, &A<v000001bfbaff7f00, v000001bfbb00b270_0 > {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001bfbb0727c0_0, 0, 1;
    %load/vec4 v000001bfbaff7c80_0;
    %store/vec4 v000001bfbaff7d20_0, 0, 16;
    %vpi_call/w 3 139 "$display", "%0t", $time {0 0 0};
T_0.0 ;
    %load/vec4 v000001bfbb072ea0_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %cmpi/ne 1, 0, 1;
    %jmp/0xz T_0.1, 6;
    %wait E_000001bfbb007b50;
    %jmp T_0.0;
T_0.1 ;
    %vpi_call/w 3 141 "$display", "Memory store has been processed - from cache" {0 0 0};
    %vpi_call/w 3 142 "$display", "%0t", $time {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001bfbb0727c0_0, 0, 1;
T_0.2 ;
    %load/vec4 v000001bfbb072ea0_0;
    %pad/u 32;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %cmpi/ne 1, 0, 1;
    %jmp/0xz T_0.3, 6;
    %wait E_000001bfbb007b50;
    %jmp T_0.2;
T_0.3 ;
    %vpi_call/w 3 147 "$display", "Memory store has fully completed - from cache" {0 0 0};
    %vpi_call/w 3 148 "$display", "%0t", $time {0 0 0};
    %end;
S_000001bfbb073610 .scope module, "simple_ram" "RAM" 3 62, 3 259 0, S_000001bfbaf86c40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 16 "address_in";
    .port_info 2 /INPUT 32 "data_in";
    .port_info 3 /OUTPUT 32 "data_out";
    .port_info 4 /INPUT 1 "wren";
    .port_info 5 /OUTPUT 1 "load_completed";
    .port_info 6 /OUTPUT 1 "store_completed";
    .port_info 7 /INPUT 1 "store_ack";
    .port_info 8 /INPUT 1 "mem_load_req";
    .port_info 9 /OUTPUT 1 "load_toggle";
P_000001bfbb00a220 .param/l "D_WIDTH" 0 3 260, +C4<00000000000000000000000000100000>;
P_000001bfbb00a258 .param/l "WIDTH_AD" 0 3 261, +C4<00000000000000000000000000010000>;
v000001bfbb073260_0 .net "address_in", 15 0, v000001bfbaff7d20_0;  alias, 1 drivers
v000001bfbb072a40_0 .net "clk", 0 0, v000001bfbb074cf0_0;  1 drivers
v000001bfbb072540_0 .net "data_in", 31 0, v000001bfbb072720_0;  alias, 1 drivers
v000001bfbb073300_0 .var "data_out", 31 0;
v000001bfbb0733a0_0 .var "load_completed", 0 0;
v000001bfbb0731c0_0 .var "load_toggle", 0 0;
v000001bfbb0725e0 .array "mem", 65535 0, 31 0;
v000001bfbb072680_0 .net "mem_load_req", 0 0, v000001bfbb072ae0_0;  alias, 1 drivers
v000001bfbb072fe0_0 .net "store_ack", 0 0, v000001bfbb072e00_0;  alias, 1 drivers
v000001bfbb072900_0 .var "store_completed", 0 0;
v000001bfbb073080_0 .net "wren", 0 0, v000001bfbb0727c0_0;  alias, 1 drivers
E_000001bfbb007210 .event posedge, v000001bfbb072a40_0;
S_000001bfbb073850 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 280, 3 280 0, S_000001bfbb073610;
 .timescale 0 0;
v000001bfbb073440_0 .var/2s "i", 31 0;
    .scope S_000001bfbaf86dd0;
T_1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001bfbb072c20_0, 0, 1;
    %end;
    .thread T_1, $init;
    .scope S_000001bfbaf86dd0;
T_2 ;
    %wait E_000001bfbb0072d0;
    %load/vec4 v000001bfbb00b310_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.0, 8;
    %fork t_1, S_000001bfbafdd6f0;
    %jmp t_0;
    .scope S_000001bfbafdd6f0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001bfbafdc610_0, 0, 32;
T_2.2 ;
    %load/vec4 v000001bfbafdc610_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_2.3, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001bfbafdc610_0;
    %store/vec4a v000001bfbb072f40, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001bfbafdc610_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001bfbafdc610_0, 0, 32;
    %jmp T_2.2;
T_2.3 ;
    %end;
    .scope S_000001bfbaf86dd0;
t_0 %join;
T_2.0 ;
    %load/vec4 v000001bfbb00b310_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.4, 8;
    %vpi_call/w 3 164 "$display", "instr type is %d", v000001bfbb072d60_0 {0 0 0};
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %mod;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_2.6, 4;
    %vpi_call/w 3 166 "$display", "Address needs to be word aligned (divisible by 2) for now" {0 0 0};
    %vpi_call/w 3 167 "$display", "This most likely means to load a byte. If address 0x03, we should actually load word at 0x02. Then only return the upper 8 bits" {0 0 0};
    %vpi_call/w 3 168 "$finish" {0 0 0};
T_2.6 ;
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 4, 0, 32;
    %div;
    %pad/u 16;
    %store/vec4 v000001bfbaff7dc0_0, 0, 16;
    %load/vec4 v000001bfbaff7dc0_0;
    %pad/u 32;
    %pushi/vec4 8, 0, 32;
    %mod;
    %pad/u 16;
    %store/vec4 v000001bfbaff7e60_0, 0, 16;
    %vpi_call/w 3 173 "$display", "block_address is %d", v000001bfbaff7dc0_0 {0 0 0};
    %vpi_call/w 3 174 "$display", "block_num is %d", v000001bfbaff7e60_0 {0 0 0};
    %load/vec4 v000001bfbb072d60_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.8, 4;
    %vpi_call/w 3 178 "$display", "Got a read instruction" {0 0 0};
    %ix/getv 4, v000001bfbaff7e60_0;
    %load/vec4a v000001bfbb072f40, 4;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.10, 4;
    %vpi_call/w 3 180 "$display", "vld[block_num] passed" {0 0 0};
    %ix/getv 4, v000001bfbaff7e60_0;
    %load/vec4a v000001bfbb072cc0, 4;
    %load/vec4 v000001bfbaff7c80_0;
    %parti/s 11, 5, 4;
    %cmp/e;
    %jmp/0xz  T_2.12, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001bfbb072c20_0, 0, 1;
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 4, 0, 32;
    %mod;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.14, 4;
    %ix/getv 4, v000001bfbaff7e60_0;
    %load/vec4a v000001bfbaff7f00, 4;
    %parti/s 16, 0, 2;
    %store/vec4 v000001bfbb072450_0, 0, 16;
    %jmp T_2.15;
T_2.14 ;
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %mod;
    %cmpi/e 2, 0, 32;
    %jmp/0xz  T_2.16, 4;
    %ix/getv 4, v000001bfbaff7e60_0;
    %load/vec4a v000001bfbaff7f00, 4;
    %parti/s 16, 16, 6;
    %store/vec4 v000001bfbb072450_0, 0, 16;
T_2.16 ;
T_2.15 ;
T_2.12 ;
T_2.10 ;
    %load/vec4 v000001bfbb072c20_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.18, 4;
    %vpi_call/w 3 193 "$display", "The tag did not match the address, going to memory" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001bfbb072ae0_0, 0, 1;
    %load/vec4 v000001bfbaff7c80_0;
    %store/vec4 v000001bfbaff7d20_0, 0, 16;
T_2.20 ;
    %load/vec4 v000001bfbb072b80_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %cmpi/ne 1, 0, 1;
    %jmp/0xz T_2.21, 6;
    %wait E_000001bfbb007f10;
    %jmp T_2.20;
T_2.21 ;
    %load/vec4 v000001bfbaff7fa0_0;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4a v000001bfbaff7f00, 4, 0;
    %vpi_call/w 3 199 "$display", "inside read, data_f_mem is %h", v000001bfbaff7fa0_0 {0 0 0};
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 4, 0, 32;
    %mod;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.22, 4;
    %ix/getv 4, v000001bfbaff7e60_0;
    %load/vec4a v000001bfbaff7f00, 4;
    %parti/s 16, 0, 2;
    %store/vec4 v000001bfbb072450_0, 0, 16;
    %jmp T_2.23;
T_2.22 ;
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %mod;
    %cmpi/e 2, 0, 32;
    %jmp/0xz  T_2.24, 4;
    %ix/getv 4, v000001bfbaff7e60_0;
    %load/vec4a v000001bfbaff7f00, 4;
    %parti/s 16, 16, 6;
    %store/vec4 v000001bfbb072450_0, 0, 16;
T_2.24 ;
T_2.23 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4a v000001bfbb072f40, 4, 0;
    %load/vec4 v000001bfbaff7c80_0;
    %parti/s 11, 5, 4;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4a v000001bfbb072cc0, 4, 0;
T_2.18 ;
    %vpi_call/w 3 212 "$display", "Read data from ram, data_out from cache is %h", v000001bfbb072450_0 {0 0 0};
    %jmp T_2.9;
T_2.8 ;
    %load/vec4 v000001bfbb072d60_0;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.26, 4;
    %vpi_call/w 3 217 "$display", "Got a write instruction" {0 0 0};
    %ix/getv 4, v000001bfbaff7e60_0;
    %load/vec4a v000001bfbb072f40, 4;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.28, 4;
    %pushi/vec4 1, 0, 1;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4a v000001bfbb072f40, 4, 0;
    %pushi/vec4 0, 0, 32;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4a v000001bfbaff7f00, 4, 0;
    %load/vec4 v000001bfbaff7c80_0;
    %parti/s 11, 5, 4;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4a v000001bfbb072cc0, 4, 0;
    %jmp T_2.29;
T_2.28 ;
    %load/vec4 v000001bfbaff7e60_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %pad/u 5;
    %ix/vec4 4;
    %load/vec4a v000001bfbb072f40, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.30, 8;
    %vpi_call/w 3 227 "$display", "block is already valid, sending old cache line to memory" {0 0 0};
    %load/vec4 v000001bfbaff7e60_0;
    %pad/u 32;
    %cast2;
    %store/vec4 v000001bfbb00b270_0, 0, 32;
    %fork TD_tb.dut.send_to_mem, S_000001bfbafdda10;
    %join;
T_2.30 ;
T_2.29 ;
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 4, 0, 32;
    %mod;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.32, 4;
    %load/vec4 v000001bfbaff8040_0;
    %ix/getv 4, v000001bfbaff7e60_0;
    %flag_mov 8, 4;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001bfbaff7f00, 4, 5;
    %jmp T_2.33;
T_2.32 ;
    %load/vec4 v000001bfbaff7c80_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %mod;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_2.34, 4;
    %load/vec4 v000001bfbaff8040_0;
    %ix/getv 4, v000001bfbaff7e60_0;
    %flag_mov 8, 4;
    %ix/load 5, 16, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001bfbaff7f00, 4, 5;
T_2.34 ;
T_2.33 ;
T_2.26 ;
T_2.9 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4 v000001bfbb0729a0_0, 4, 1;
    %fork t_3, S_000001bfbafdd880;
    %jmp t_2;
    .scope S_000001bfbafdd880;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001bfbaf8bc20_0, 0, 32;
T_2.36 ;
    %load/vec4 v000001bfbaf8bc20_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_2.37, 5;
    %load/vec4 v000001bfbb0729a0_0;
    %load/vec4 v000001bfbaf8bc20_0;
    %part/s 1;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_2.38, 4;
    %load/vec4 v000001bfbaf8bc20_0;
    %store/vec4 v000001bfbb00b270_0, 0, 32;
    %fork TD_tb.dut.send_to_mem, S_000001bfbafdda10;
    %join;
T_2.38 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001bfbaf8bc20_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001bfbaf8bc20_0, 0, 32;
    %jmp T_2.36;
T_2.37 ;
    %end;
    .scope S_000001bfbaf86dd0;
t_2 %join;
    %pushi/vec4 0, 0, 1;
    %ix/getv 4, v000001bfbaff7e60_0;
    %store/vec4 v000001bfbb0729a0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001bfbb072c20_0, 0, 1;
    %vpi_call/w 3 252 "$display", "Block number is %d", v000001bfbaff7e60_0 {0 0 0};
    %vpi_call/w 3 253 "$display", "Data at cache_data[block_num] is %h", &A<v000001bfbaff7f00, v000001bfbaff7e60_0 > {0 0 0};
T_2.4 ;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_000001bfbb073610;
T_3 ;
    %fork t_5, S_000001bfbb073850;
    %jmp t_4;
    .scope S_000001bfbb073850;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001bfbb073440_0, 0, 32;
T_3.0 ;
    %load/vec4 v000001bfbb073440_0;
    %cmpi/s 65536, 0, 32;
    %jmp/0xz T_3.1, 5;
    %load/vec4 v000001bfbb073440_0;
    %ix/getv/s 4, v000001bfbb073440_0;
    %store/vec4a v000001bfbb0725e0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001bfbb073440_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001bfbb073440_0, 0, 32;
    %jmp T_3.0;
T_3.1 ;
    %end;
    .scope S_000001bfbb073610;
t_4 %join;
    %end;
    .thread T_3;
    .scope S_000001bfbb073610;
T_4 ;
    %wait E_000001bfbb007210;
    %load/vec4 v000001bfbb073080_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %load/vec4 v000001bfbb072540_0;
    %load/vec4 v000001bfbb073260_0;
    %pad/u 18;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v000001bfbb0725e0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001bfbb072900_0, 0;
    %jmp T_4.1;
T_4.0 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001bfbb072900_0, 0;
T_4.1 ;
    %load/vec4 v000001bfbb072680_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.2, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v000001bfbb0733a0_0, 0;
    %jmp T_4.3;
T_4.2 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v000001bfbb0733a0_0, 0;
T_4.3 ;
    %load/vec4 v000001bfbb073080_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.4, 8;
T_4.4 ;
    %load/vec4 v000001bfbb073260_0;
    %pad/u 18;
    %ix/vec4 4;
    %load/vec4a v000001bfbb0725e0, 4;
    %assign/vec4 v000001bfbb073300_0, 0;
    %jmp T_4;
    .thread T_4;
    .scope S_000001bfbaf86c40;
T_5 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001bfbb074cf0_0, 0, 1;
    %pushi/vec4 4, 0, 16;
    %store/vec4 v000001bfbb073f30_0, 0, 16;
    %pushi/vec4 256, 0, 16;
    %store/vec4 v000001bfbb073d50_0, 0, 16;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001bfbb073120_0, 0, 1;
    %end;
    .thread T_5, $init;
    .scope S_000001bfbaf86c40;
T_6 ;
    %vpi_call/w 3 7 "$readmemb", "instructions3.mem", v000001bfbb075290 {0 0 0};
    %end;
    .thread T_6;
    .scope S_000001bfbaf86c40;
T_7 ;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v000001bfbb073e90_0, 0, 32;
    %end;
    .thread T_7;
    .scope S_000001bfbaf86c40;
T_8 ;
    %vpi_call/w 3 38 "$dumpfile", "dump.vcd" {0 0 0};
    %vpi_call/w 3 39 "$dumpvars" {0 0 0};
    %end;
    .thread T_8;
    .scope S_000001bfbaf86c40;
T_9 ;
    %delay 5, 0;
    %load/vec4 v000001bfbb074cf0_0;
    %inv;
    %store/vec4 v000001bfbb074cf0_0, 0, 1;
    %jmp T_9;
    .thread T_9;
    .scope S_000001bfbaf86c40;
T_10 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001bfbb073120_0, 0, 1;
    %delay 5, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001bfbb073120_0, 0, 1;
    %delay 50, 0;
    %pushi/vec4 8, 0, 16;
    %store/vec4 v000001bfbb073f30_0, 0, 16;
    %pushi/vec4 57005, 0, 16;
    %store/vec4 v000001bfbb073d50_0, 0, 16;
    %delay 200, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001bfbb073e90_0, 0, 32;
    %pushi/vec4 40, 0, 16;
    %store/vec4 v000001bfbb073f30_0, 0, 16;
    %pushi/vec4 48879, 0, 16;
    %store/vec4 v000001bfbb073d50_0, 0, 16;
    %delay 300, 0;
    %vpi_call/w 3 89 "$finish" {0 0 0};
    %end;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "-";
    "cache_set.sv";
